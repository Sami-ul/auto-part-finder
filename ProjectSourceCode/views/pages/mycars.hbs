<main class="py-4 mx-5">
    <div class="mb-3 d-flex justify-content-between align-items-center">
        <h1>My Garage</h1>
        <button id="addVehicleBtn" class="btn btn-primary">Add Vehicle</button>
    </div>

    {{#if cars}}
    <div class="row row-cols-3 row-cols-md-3 mb-3 text-center" id="carsContainer">
        {{#each cars}}
        <div class="card my-3 mx-1 rounded-3 shadow-sm" id="car-{{this.id}}">
            <div class="card-body">
                <h1 class="card-title py-3">{{this.year}} {{this.make}} {{this.model}}</h1>
                <table class="table">
                    <thead>
                        <tr class="text-start">
                            <th scope="col">Make:</th>
                            <td class="text-end">{{this.make}}</td>
                        </tr>
                        <tr class="text-start">
                            <th scope="col">Model:</th>
                            <td class="text-end">{{this.model}}</td>
                        </tr>
                        <tr class="text-start">
                            <th scope="col">Year:</th>
                            <td class="text-end">{{this.year}}</td>
                        </tr>
                        <tr class="text-start">
                            <th scope="col">Engine:</th>
                            <td class="text-end">{{this.engine}}</td>
                        </tr>
                    </thead>
                </table>
            </div>
            <div class="card-body text-end">
                <button type="button" class="btn btn-primary edit-car-btn" data-bs-toggle="modal" data-bs-target="#carModal">
                    Edit
                </button>
                <button type="button" class="btn btn-danger delete-car-btn" data-bs-toggle="modal" data-bs-target="#deleteModal">
                    Delete
                </button>
            </div>
        </div>
        {{/each}}
    </div>
    {{else}}
    <div class="text-center py-5">
        <i class="bi bi-car-front" style="font-size: 4rem;"></i>
        <h2 class="mt-3">No vehicles in your garage</h2>
    </div>
    {{/if}}
</main>

<!-- Add Vehicle Modal -->
<div class="modal fade" id="addVehicleModal" tabindex="-1" aria-labelledby="addVehicleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addVehicleModalLabel">Add New Vehicle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addVehicleForm">
                    <div class="mb-3">
                        <select id="year" class="form-select" required>
                            <option value="">Select Year</option>
                            <option>2024</option>
                            <option>2023</option>
                            <option>2022</option>
                            {{!-- More options... --}}
                        </select>
                    </div>
                    <div class="mb-3">
                        <select id="make" class="form-select" required>
                            <option value="">Select Make</option>
                            <option>Toyota</option>
                            <option>Honda</option>
                            <option>Ford</option>
                            {{!-- More options... --}}
                        </select>
                    </div>
                    <div class="mb-3">
                        <select id="model" class="form-select" required>
                            <option value="">Select Model</option>
                            <option>Camry</option>
                            <option>Corolla</option>
                            <option>Civic</option>
                            <option>Accord</option>
                           {{!-- More options.. should change based on make choice --}}
                        </select>
                    </div>
                    <div class="mb-3">
                        <select id="engine" class="form-select" required>
                            <option value="">Select Engine</option>
                            <option>2.0L 4-cylinder</option>
                            <option>2.5L 4-cylinder</option>
                            <option>3.0L V6</option>
                            {{!-- More options.. should change based on make and model choice --}}
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveVehicle">Add Vehicle</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="carModal" tabindex="-1" aria-labelledby="carModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="carModalLabel">Edit Vehicle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            {{!-- Options for below are all populated based on the "add vehicle" form --}}
            <div class="modal-body">
                <form id="editVehicleForm">
                    <div class="mb-3">
                        <select id="editYear" class="form-select" required>
                        </select>
                    </div>
                    <div class="mb-3">
                        <select id="editMake" class="form-select" required>
                        </select>
                    </div>
                    <div class="mb-3">
                        <select id="editModel" class="form-select" required>
                        </select>
                    </div>
                    <div class="mb-3">
                        <select id="editEngine" class="form-select" required>
                        </select>
                    </div>
                    <input type="hidden" id="editCarId">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveChanges">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete a modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">Are you sure you want to delete this vehicle?</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Yes</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Show the modal
    document.getElementById('addVehicleBtn').addEventListener('click', function() {
        const modal = new bootstrap.Modal(document.getElementById('addVehicleModal'));
        modal.show();
    });

    // To add a vehicle to profile and db
    document.getElementById('saveVehicle').addEventListener('click', function() {
        const year = document.getElementById('year').value;
        const make = document.getElementById('make').value;
        const model = document.getElementById('model').value;
        const engine = document.getElementById('engine').value;

        if (!year || !make || !model || !engine) {
            alert('Please fill in all fields');
            return;
        }

        fetch('/api/vehicles', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ year, make, model, engine })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Create new card HTML with the returned ID
                const newCard = document.createElement('div');
                newCard.className = 'card my-3 mx-1 rounded-3 shadow-sm';
                newCard.id = 'car-' + data.id;
                newCard.innerHTML = `
                    <div class="card-body">
                        <h1 class="card-title py-3">${year} ${make} ${model}</h1>
                        <table class="table">
                            <thead>
                                <tr class="text-start">
                                    <th scope="col">Make:</th>
                                    <td class="text-end">${make}</td>
                                </tr>
                                <tr class="text-start">
                                    <th scope="col">Model:</th>
                                    <td class="text-end">${model}</td>
                                </tr>
                                <tr class="text-start">
                                    <th scope="col">Year:</th>
                                    <td class="text-end">${year}</td>
                                </tr>
                                <tr class="text-start">
                                    <th scope="col">Engine:</th>
                                    <td class="text-end">${engine}</td>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="card-body text-end">
                        <button type="button" class="btn btn-primary edit-car-btn" data-bs-toggle="modal" data-bs-target="#carModal">
                            Edit
                        </button>
                        <button type="button" class="btn btn-danger delete-car-btn" data-bs-toggle="modal" data-bs-target="#deleteModal">
                            Delete
                        </button>
                    </div>
                `;

                // Adds to container
                const container = document.getElementById('carsContainer');
                if (!container) {
                    const newContainer = document.createElement('div');
                    newContainer.className = 'row row-cols-3 row-cols-md-3 mb-3 text-center';
                    newContainer.id = 'carsContainer';
                    newContainer.appendChild(newCard);
                    document.querySelector('main').appendChild(newContainer);
                    
                    const noVehiclesMsg = document.querySelector('.text-center.py-5');
                    if (noVehiclesMsg) {
                        noVehiclesMsg.remove();
                    }
                } else {
                    container.appendChild(newCard);
                }

                // Closes
                const modal = bootstrap.Modal.getInstance(document.getElementById('addVehicleModal'));
                modal.hide();

                // Resets form
                document.getElementById('addVehicleForm').reset();
            } else {
                alert('Failed to add vehicle');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to add vehicle');
        });
    });

    // For deleting modal
    let cardToDelete = null;

    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('delete-car-btn')) {
            // Storing id
            cardToDelete = e.target.closest('.card');
            const carId = cardToDelete.id.split('-')[1];
            console.log('Preparing to delete car with ID:', carId);
        }
    });

    document.getElementById('confirmDelete').addEventListener('click', function() {
        if (!cardToDelete) {
            console.error('No card selected for deletion');
            return;
        }

        const carId = cardToDelete.id.split('-')[1];
        console.log('Attempting to delete car with ID:', carId);
        
        fetch(`/api/vehicles/${carId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                cardToDelete.remove();
                const modal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                modal.hide();

                // Sees if any cards still remaining
                const container = document.getElementById('carsContainer');
                if (container && container.children.length === 0) {
                    container.remove();
                    const main = document.querySelector('main');
                    main.innerHTML = `
                        <div class="text-center py-5">
                            <i class="bi bi-car-front" style="font-size: 4rem;"></i>
                            <h2 class="mt-3">No vehicles in your garage</h2>
                            <p class="text-muted">Add your first vehicle to get started!</p>
                        </div>
                    `;
                }
            } else {
                throw new Error('Failed to delete vehicle');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to delete vehicle');
        })
        .finally(() => {
            cardToDelete = null;
        });
    });

    let currentEditCard = null;

    // Populates the "edit" form when editing an already saved car
    document.addEventListener('DOMContentLoaded', function() {
        const addYear = document.querySelector('#year');
        const addMake = document.querySelector('#make');
        const addModel = document.querySelector('#model');
        const addEngine = document.querySelector('#engine');

        document.querySelector('#editYear').innerHTML = addYear.innerHTML;
        document.querySelector('#editMake').innerHTML = addMake.innerHTML;
        document.querySelector('#editModel').innerHTML = addModel.innerHTML;
        document.querySelector('#editEngine').innerHTML = addEngine.innerHTML;
    });

    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('edit-car-btn')) {
            currentEditCard = e.target.closest('.card');
            
            // Get current values from the card
            const make = currentEditCard.querySelector('tr:nth-child(1) td').textContent;
            const model = currentEditCard.querySelector('tr:nth-child(2) td').textContent;
            const year = currentEditCard.querySelector('tr:nth-child(3) td').textContent;
            const engine = currentEditCard.querySelector('tr:nth-child(4) td').textContent;
            
            // Populate the edit form
            document.getElementById('editYear').value = year;
            document.getElementById('editMake').value = make;
            document.getElementById('editModel').value = model;
            document.getElementById('editEngine').value = engine;
            document.getElementById('editCarId').value = currentEditCard.id;
        }
    });

    // Saves any changes made
    document.getElementById('saveChanges').addEventListener('click', function() {
        if (!currentEditCard) return;

        const year = document.getElementById('editYear').value;
        const make = document.getElementById('editMake').value;
        const model = document.getElementById('editModel').value;
        const engine = document.getElementById('editEngine').value;
        const carId = currentEditCard.id.split('-')[1];

        if (!year || !make || !model || !engine) {
            alert('Please fill in all fields');
            return;
        }

        fetch(`/api/vehicles/${carId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ year, make, model, engine })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update the card content
                currentEditCard.querySelector('.card-title').textContent = `${year} ${make} ${model}`;
                currentEditCard.querySelector('tr:nth-child(1) td').textContent = make;
                currentEditCard.querySelector('tr:nth-child(2) td').textContent = model;
                currentEditCard.querySelector('tr:nth-child(3) td').textContent = year;
                currentEditCard.querySelector('tr:nth-child(4) td').textContent = engine;

                // Close the modal
                const modal = bootstrap.Modal.getInstance(document.getElementById('carModal'));
                modal.hide();

                // Reset the form
                document.getElementById('editVehicleForm').reset();
                currentEditCard = null;
            } else {
                alert('Failed to update vehicle');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to update vehicle');
        });
    });
</script>
